#!/bin/sh

echo "Starting rcS..."

if [ -r /etc/default/rcS ]
then
	. /etc/default/rcS
else
	echo "/etc/default/rcS not found."
fi

echo "++ Mounting filesystems"
mkdir -p /dev/pts
mount -a

# Determine active system partition
system0_version=$(awk "{print \$3}" /media/system0/version 2> /dev/null)
system1_version=$(awk "{print \$3}" /media/system1/version 2> /dev/null)

# Non-numbers get set to -1
if ! echo $system0_version | egrep -q '^[0-9]+$'; then
	system0_version=-1
fi
if ! echo $system1_version | egrep -q '^[0-9]+$'; then
	system1_version=-1
fi

if [ "$system0_version" -gt "$system1_version" ]; then
	active_system=/media/system0
	inactive_system=/media/system1
else
	active_system=/media/system1
	inactive_system=/media/system0
fi

# Set active/inactive system
echo "active_system=$active_system"
echo "inactive_system=$inactive_system"
# Set system partitions
ln -s $active_system /media/system
ln -s $inactive_system /media/inactive_system

# Set hostname
hostname -F /etc/hostname

# Link modules from /media/system/lib/modules/... to /lib/modules/...
MODPATH=lib/modules/$(uname -r)
mkdir -p /$MODPATH
for i in /media/system/$MODPATH/* ;do
	# Ignore dangling symlinks (if any).
	[ ! -f "$i" ] && continue
	ln -s $i /$MODPATH/$(basename $i)
done

# Create modules.* files in /lib/modules/...
depmod

# Add i2c real-time clock (RTC)
echo ds1307 0x68 > /sys/class/i2c-adapter/i2c-0/new_device

# Set system time from RTC (assume its using UTC)
hwclock -us

# Check if SD card mounted, if not wait and try again
if ! grep -qs /media/data /proc/mounts; then
	sleep 1
	mount -a
fi
if ! grep -qs /media/system /proc/mounts; then
	sleep 1
	mount -a
fi

# Add data directories
mkdir -p /media/data/chrony
mkdir -p /media/data/log
mkdir -p /media/data/logrotate
mkdir -p /media/data/srv

# Add SSH keys
cat /media/config/authorized_keys >> /root/.ssh/authorized_keys

# Fix keys for SHH
# Note that the keys are copied (and not symlinked from the overlay) since
# the SD card (mounted on /media/config) is formatted using FAT32 which doesn't
# allow for individual file permissions.
cp /media/config/etc/ssh/* /etc/ssh
chmod 600 `find /etc/ssh/ -name ssh_host_\*`

# Fix permissions for monitrc
chmod 700 /etc/monitrc

# Override the /etc/hosts file with the actual hostname (found on the SD card).
printf "127.0.0.1\tlocalhost\n127.0.1.1\t%s\n" $(cat /etc/hostname) > /etc/hosts

# Override /etc/localtime based on the /etc/timezone file (found on the SD card).
ln -sf /usr/share/zoneinfo/$(cat /media/config/etc/timezone) /etc/localtime

# Set MotD
cat /media/config/etc/motd > /etc/motd
SYSTEM_VERSION=$(awk 'BEGIN{FS=" ";}{print $2;}' /etc/sw-versions)
echo " system $SYSTEM_VERSION" >> /etc/motd
CONFIG_VERSION=$(awk 'BEGIN{FS=" ";}{print $2;}' /etc/config-version)
CONFIG_NAME=$(awk 'BEGIN{FS=" ";}{print $1;}' /etc/config-version)
echo " config $CONFIG_VERSION ($CONFIG_NAME)" >> /etc/motd

echo "++ Running all startup scripts"
# Start all init scripts in /etc/init.d
# executing them in numerical order.
#
# Modules
for i in /etc/init.d/M??* ;do

	 # Ignore dangling symlinks (if any).
	 [ ! -f "$i" ] && continue

	 case "$i" in
		*.sh)
			# Source shell script for speed.
			(
				trap - INT QUIT TSTP
				set insert
				. $i
			)
			;;
		*)
			# No sh extension, so fork subprocess.
			$i insert
			;;
	esac
done

# Synchronuous scripts in order
for i in /etc/init.d/S??* ;do

	 # Ignore dangling symlinks (if any).
	 [ ! -f "$i" ] && continue

	 case "$i" in
		*.sh)
			# Source shell script for speed.
			(
				trap - INT QUIT TSTP
				set start
				. $i
			)
			;;
		*)
			# No sh extension, so fork subprocess.
			$i start
			;;
	esac
done

# Asynchronous scripts without order
#
for i in /etc/init.d/A* ;do

	# Ignore dangling symlinks (if any).
	[ ! -f "$i" ] && continue

	case "$i" in
		*Amonit)
			nohup sh -c "sleep 30; $i start" > /dev/null &
			;;
		*)
			nohup sh $i start > /dev/null &
			;;
	esac
done

