from contextlib import AsyncExitStack
from ._config import Config


class AppProxy:
	def __init__(self, app):
		self._app = app
		self._stack = AsyncExitStack()

	def __getattr__(self, name):
		"""Forward to the underlying app instance."""
		return getattr(self._app, name)

	def enter_context(self, manager):
		"""Add a context manager to the internal stack."""
		return self._stack.enter_context(manager)

	async def enter_async_context(self, manager):
		"""Add a context manager to the internal stack."""
		return await self._stack.enter_async_context(manager)

	async def __aenter__(self):
		await self._stack.__aenter__()
		return self

	async def __aexit__(self, *args, **kwargs):
		await self._stack.__aexit__(*args, *kwargs)
