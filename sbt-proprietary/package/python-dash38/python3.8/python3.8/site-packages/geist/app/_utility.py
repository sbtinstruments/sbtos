"""Get trivial information (e.g., name, dir) about the running application.

This sounds trivial but is difficult to get right in practice.
Example application names: 'baxter', 'realm', or 'mester'.

Can be called from modules to get information about the application they have been imported into.
"""
from importlib.util import find_spec
from pathlib import Path


def app_name():
	"""Get the name of the running application."""
	import __main__ as main
	# If the app is loaded as a module, main will look something like this:
	# main.__name__   : __main__
	# main.__package__: baxter
	# main.__file__   : /media/system/lib/python3.6/site-packages/baxter/__main__.py
	#
	# If the app is executed directly, main will look something like this:
	# main.__name__   : __main__
	# main.__package__: None
	# main.__file__   : /media/system/bin/baxter
	if main.__package__ is not None:
		return main.__package__
	return Path(main.__file__).name


def app_dir():
	"""Get the source directory of the running application."""
	spec = find_spec(app_name())
	# Prefer origin
	if spec.origin is not None:
		return Path(spec.origin).parent
	# Fall back to first submodule_search_locations
	search_locs = spec.submodule_search_locations
	try:
		return Path(next(iter(search_locs)))
	except StopIteration:
		RuntimeError('Unable to resolve application directory.')
