"""Send stream messages (stdout/stderr) to a logger."""
import logging


class StreamToLogger():
	"""Send stream messages (stdout/stderr) to a logger."""

	def __init__(self, logger, log_level=logging.INFO):
		"""Construct a file-like object that sends all writes to a logger."""
		self._logger = logger
		self._log_level = log_level

	def write(self, buf):
		"""Write to the log."""
		for line in buf.rstrip().splitlines():
			self._logger.log(self._log_level, line.rstrip())

	def flush(self):
		"""Do nothing. Only here so that the class is file-like. I.e., looks like a stream."""

	def __getattr__(self, name):
		"""Catch-all for unhandled file-like operations."""
		def _method(*args):
			self._logger.log(logging.WARNING, ('[StreamToLogger] Tried to handle unknown '
			                                   f'method "{name}({str(args)})"'))
		return _method
