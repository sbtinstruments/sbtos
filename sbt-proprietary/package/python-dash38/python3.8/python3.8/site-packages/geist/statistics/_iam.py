"""An average that ignores most outliers."""
from math import floor
from statistics import StatisticsError


def interquartile_arithmetic_mean(data):
	"""Return an average that ignores most outlier.

	Insensitive to outliers (like the median) but based on a large number of observations (like
	the arithmetic mean).

	Reference: https://en.wikipedia.org/wiki/Interquartile_mean
	"""
	if not data:
		raise StatisticsError('Cannot compute the interquartile arithmetic mean from the empty set')

	sorted_data = sorted(data)
	count = len(sorted_data)
	count_per_quartile = count / 4
	to_remove = floor(count_per_quartile)

	sliced_data = sorted_data[to_remove:count - to_remove]
	full_observations = sliced_data[1:len(sliced_data) - 1]
	full_observations_sum = sum(full_observations)
	fractional_observations_sum = sliced_data[0] + sliced_data[len(sliced_data) - 1]

	interquartile_count = count_per_quartile * 2
	fractional_weight = (interquartile_count - len(full_observations)) / 2

	weighted_sum = full_observations_sum + fractional_weight * fractional_observations_sum
	return weighted_sum / interquartile_count
