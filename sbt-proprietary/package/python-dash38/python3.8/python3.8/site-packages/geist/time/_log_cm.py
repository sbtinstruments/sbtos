"""Utilities to automate logging due to frequently occurring conditions."""
import logging
from time import perf_counter
from contextlib import contextmanager


_LOGGER = logging.getLogger(__name__)


@contextmanager
def log_if_slow(code_name, *, logger=_LOGGER, level=logging.WARNING, threshold=0.5):
	"""Log if the inner code executes slower than the given threshold."""
	start = perf_counter()
	try:
		yield
	finally:
		end = perf_counter()
		duration = end - start
		delta = duration - threshold
		if delta > 0:
			logger.log(level, f'"{code_name}" took {duration:.2f} s '
			                  f'(was {delta:.2f} s slower than the expected '
			                  f'duration of {threshold:.2f} s).')


def log_duration(*args, **kwargs):
	return log_if_slow(*args, threshold=0, **kwargs)
