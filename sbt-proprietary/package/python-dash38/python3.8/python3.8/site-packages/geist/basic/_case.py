"""Case conversion functions for strings and dicts."""
import re


# Reference: http://stackoverflow.com/a/1176023/554283
_FIRST_CAP_RE = re.compile(r'(.)([A-Z][a-z]+)')
_ALL_CAP_RE = re.compile(r'([a-z0-9])([A-Z])')

def to_snake_case(name):
	"""Convert string from camelCase to snake_case."""
	first_sub = _FIRST_CAP_RE.sub(r'\1_\2', name)
	return _ALL_CAP_RE.sub(r'\1_\2', first_sub).lower()

# Reference: http://codereview.stackexchange.com/a/85314/53054
def to_camel_case(name):
	"""Convert string from snake_case to camelCase."""
	return re.sub(r'_.', lambda x: x.group()[1].upper(), name)


def keys_to_snake_case(dict_):
	"""Convert all keys in dict from camelCase to snake_case (recursively, also in lists)."""
	return _map_keys(dict_, to_snake_case)


def keys_to_camel_case(dict_):
	"""Convert all keys in dict from snake_case to camelCase (recursively, also in lists)."""
	return _map_keys(dict_, to_camel_case)

def _map_keys(dict_, operation):
	if isinstance(dict_, dict):
		return {operation(key): _map_keys(val, operation)
		        for key, val in dict_.items()}
	if isinstance(dict_, list):
		return [_map_keys(val, operation) for val in dict_]
	return dict_
