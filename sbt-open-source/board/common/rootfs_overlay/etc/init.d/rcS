#!/bin/sh

################################################################################
# Settings from /etc/default
################################################################################
echo "rcS: [INFO] Starting"

if [ -r /etc/default/rcS ]
then
	. /etc/default/rcS
else
	echo "rcS: [INFO] /etc/default/rcS was not found and won't be used."
fi

################################################################################
# Mount all filesystems
################################################################################
echo "rcS: [INFO] Mounting filesystems"
mkdir -p /dev/pts
mount -a

################################################################################
# Determine active system partition
################################################################################
active_system=`fw_printenv active_system | awk 'BEGIN {FS="="}; {print $2}'`
if [ $active_system == "0" ]; then
	inactive_system=1
elif [ $active_system == "1" ]; then
	inactive_system=0
else
	echo "rcS: [WARNING] Could not determine which system is the active one."
	echo "rcS: [WARNING] Assuming that system 0 is the active one."
	active_system=0
	inactive_system=1
fi

# Set system partitions
ln -s /media/system$active_system /media/active_system
ln -s /media/system$inactive_system /media/inactive_system
echo "rcS: [INFO] active_system=$active_system"
echo "rcS: [INFO] inactive_system=$inactive_system"

################################################################################
# Overrides for the root filesystem
################################################################################
# Many of the following mounts will override existing rootfs entries.
# We make sure that we can access the rootfs version later.
mkdir -p /media/rootfs
mount --bind / /media/rootfs

### The /etc override hierarchy is as follows (uppermost mentioned first):
#
#   1. /media/config/override/etc (from the 'config' partition)
#          Nothing per default. Can be used during testing.
#
#   2. /media/config/individual/etc (from the 'config' partition)
#          Hostname, timezone, etc.
#
#   3. /etc (from the rootfs)
#          Everything from buildroot
#
mkdir -p /media/config/individual/etc
mkdir -p /media/config/override/etc
mkdir -p /media/config/workdir/etc
# Note that the lowest lowerdir (/etc) is the same as the merged dir (/etc).
# Effectively, this overrides the /etc entry with the merged version
lowerdir=/media/config/individual/etc:/etc
upperdir=/media/config/override/etc
workdir=/media/config/workdir/etc
mergeddir=/etc
options=lowerdir=$lowerdir,upperdir=$upperdir,workdir=$workdir
mount -t overlay overlay -o $options $mergeddir

### Similar for /root
mkdir -p /media/config/individual/root
mkdir -p /media/config/override/root
mkdir -p /media/config/workdir/root
# Note that the lowest lowerdir (/root) is the same as the merged dir (/root).
# Effectively, this overrides the /root entry with the merged version
lowerdir=/media/config/individual/root:/root
upperdir=/media/config/override/root
workdir=/media/config/workdir/root
mergeddir=/root
options=lowerdir=$lowerdir,upperdir=$upperdir,workdir=$workdir
mount -t overlay overlay -o $options $mergeddir

################################################################################
# Hostname
################################################################################
hostname -F /etc/hostname

################################################################################
# Time
################################################################################
# Set system time from RTC (assume its using UTC)
hwclock -us

################################################################################
# Data directories
################################################################################
mkdir -p /media/data/chrony
mkdir -p /media/data/log
mkdir -p /media/data/logrotate
mkdir -p /media/data/srv

################################################################################
# Monit
################################################################################
# Fix permissions of the monitrc file.
# Ideally, said permissions should be built into the rootfs image but
# buildroot won't allow it.
chmod 700 /media/rootfs/etc/monitrc

################################################################################
# Versions
################################################################################
# /etc/sw-versions is used by SWUpdate to determine the currently installed
# versions.
firmware_version=`fw_printenv firmware_version \
	| awk 'BEGIN {FS="="}; {print $2}'`
software_version=`cat /etc/os-release | grep "VERSION=" \
	| awk 'BEGIN {FS="="}; {print $2}'`
# Note that the resulting file is put into the ephemeral /media/rootfs/etc and
# not the /etc that is backed by OverlayFS.
echo -e "firmware $firmware_version\nsoftware $software_version" \
	> /media/rootfs/etc/sw-versions

################################################################################
# Change /var/www/lab owner
################################################################################
# Fix owner of /var/www/lab. Nginx expects the www-data user to own it.
# Ideally, said owner should be built into the rootfs image but
# buildroot won't allow it.
chown -R www-data:www-data /var/www/lab

################################################################################
# Startup scripts
################################################################################
echo "rcS: [INFO] Running all startup scripts"

# Start all init scripts in /etc/init.d executing them in numerical order.
for i in /etc/init.d/S??* ;do

	 # Ignore dangling symlinks (if any).
	 [ ! -f "$i" ] && continue

	 case "$i" in
		*.sh)
			# Source shell script for speed.
			(
				trap - INT QUIT TSTP
				set start
				. $i
			)
			;;
		*)
			# No sh extension, so fork subprocess.
			$i start
			;;
	esac
done

