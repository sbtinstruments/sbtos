logger "[autorun] ACTION=${ACTION} MDEV=${MDEV} DEVTYPE=${DEVTYPE}"

mount_dir=/media

if [ -z "${MDEV}" ]; then
	logger "[autorun] MDEV was not set. Exiting..."
	exit 1
fi

if [ "${DEVTYPE}" == "disk" ]; then
	logger "[autorun] Device type is disk. Exiting..."
	exit 1
fi

eumount() {
	if grep -qs "^/dev/$1 " /proc/mounts; then
		umount -f "${mount_dir}/$1"
	fi

	[ -d "${mount_dir}/$1" ] && rmdir "${mount_dir}/$1"
}

emount() {
	mkdir -p "${mount_dir}/$1"

	local attempts=0
	local max_attempts=10

	while ! mount -t auto -o rw,defaults "/dev/$1" "${mount_dir}/$1" && [[ $attempts -lt $max_attempts ]]; do
		logger "[autorun] Failed to mount $1 (attempt $(expr $attempts + 1)/${max_attempts})"
		sleep 1
		attempts=$(expr $attempts + 1)
	done

	if [[ $attempts -eq $max_attempts ]] ; then
		logger "[autorun] Failed to mount $1"
		rmdir "${mount_dir}/$1"
		exit 1
	fi

	logger "[autorun] Mounted $1"
}

autorun() {
	local autorunpy="${mount_dir}/$1/autorun.py"
	if [ -x "$autorunpy" ]; then
		logger "[autorun]: Executing: ${autorunpy}"
		python "${autorunpy}" | logger -t "autorun.py"
		exit 0
	fi
}

autoupdate() {
	for swufile in ${mount_dir}/$1/*.swu; do
		logger "[autoupdate] Found SWU: $swufile"
		swu_client send "$swufile" | logger -t "autoupdate"
		exit 0
	done
}

add() {
	# Exits with code 1 on error
	eumount $1
	emount $1
	# First, try to execute "autorun.py". Exits with code 0 on success
	autorun $1
	# Second, try to update the software. Exits with code 0 on success
	autoupdate $1
}

case "${ACTION}" in
	add)
		add $MDEV
		;;
	remove)
		eumount $MDEV
		;;
	*)
		logger "[autorun] Unknown action '${ACTION}'"
		;;
esac
